# Makefile.in for Turquoise SuperStat

# Variables
datarootdir=@datarootdir@
CXXFLAGS=@CXXFLAGS@ -I. -Wall -DDATA=\"@datadir@/turqstat\"
@QT@QTFLAGS=-I@QTINCLUDE@
LDFLAGS=@LDFLAGS@
srcdir=@srcdir@
VPATH=@scrdir@
LIBS=@LIBS@
QTLIBS=@QTLIB@
DESTDIR=
OBJS=turqstat.o statengine.o statview.o squishread.o fdapxread.o jamread.o mypointread.o utility.o sdmread.o tanstaaflread.o newsspoolread.o mytime.o output.o mappings.o convert.o datatypes.o lexer.o template.o @NONNTP@nntpread.o
QTOBJS=qtgui.o moc_qtgui.o qtlist.o moc_qtlist.o qtreport.o moc_qtreport.o qtbars.o moc_qtbars.o qtprogress.o moc_qtprogress.o statengine.o statview.o squishread.o fdapxread.o jamread.o mypointread.o utility.o sdmread.o tanstaaflread.o newsspoolread.o mytime.o outputqt.o mappings.o convert.o datatypes.o lexer.o template.o @NONNTP@nntpread.o
TEALOBJS=teal.o convert.o utility.o mappings.o mytime.o
@QT@EXE=turqstat@EXEEXT@ xturqstat@EXEEXT@
@NOQT@EXE=turqstat@EXEEXT@
TEALEXE=teal@EXEEXT@
DEF=@DEF@
prefix=@prefix@
exec_prefix=@exec_prefix@
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
INSTALL_OPTS=-s
else
INSTALL_OPTS=
endif

# Magic targets
all: $(EXE)
@QT@	make -C po all

debian:
	fakeroot debian/rules binary

@NOQT@clean:
@NOQT@	-rm $(OBJS) $(TEALOBJS)
@NOQT@	-rm $(EXE) $(TEALEXE)
@NOQT@	-make -C mappings clean

@QT@clean:
@QT@	-rm $(OBJS) $(QTOBJS) $(TEALOBJS) moc_* *.moc
@QT@	-rm $(EXE) $(TEALEXE)
@QT@	-make -C po clean
@QT@	-make -C mappings clean

distclean: clean
	-rm config.status config.log config.cache config.h Makefile Doxyfile
	-make -C po distclean
	-make -C mappings distclean

debianclean:
	fakeroot debian/rules clean

@NOINST@install: install-text @QT@install-qt
@NOINST@
@NOINST@install-text: turqstat@EXEEXT@
@NOINST@	install -d $(DESTDIR)@bindir@ $(DESTDIR)@datadir@/doc/turqstat/ $(DESTDIR)@datadir@/doc/turqstat/sv/ $(DESTDIR)@mandir@/man1 $(DESTDIR)@mandir@/sv/man1/
@NOINST@	install $(INSTALL_OPTS) turqstat@EXEEXT@ $(DESTDIR)@bindir@
@NOINST@	install -m 644 turqstat.doc $(DESTDIR)@datadir@/doc/turqstat/
@NOINST@	install -m 644 turqstat.dok $(DESTDIR)@datadir@/doc/turqstat/sv/
@NOINST@	install -m 644 turqstat.1   $(DESTDIR)@mandir@/man1/
@NOINST@	install -m 644 turqstat-sv.1 $(DESTDIR)@mandir@/sv/man1/turqstat.1
@NOINST@	install -d $(DESTDIR)@datadir@/turqstat/
@NOINST@	install -m 644 templates/default.tpl $(DESTDIR)@datadir@/turqstat/
@NOINST@	install -m 644 templates/svenska.tpl $(DESTDIR)@datadir@/turqstat/
@NOINST@
@NOINST@@QT@install-qt: xturqstat@EXEEXT@
@NOINST@@QT@	install -d $(DESTDIR)@bindir@ $(DESTDIR)@datadir@/doc/xturqstat/ $(DESTDIR)@datadir@/doc/xturqstat/sv/ $(DESTDIR)@mandir@/man1/ $(DESTDIR)@mandir@/sv/man1/
@NOINST@@QT@	install $(INSTALL_OPTS) xturqstat@EXEEXT@ $(DESTDIR)@bindir@
@NOINST@@QT@	install -m 644 turqstat.doc $(DESTDIR)@datadir@/doc/xturqstat/
@NOINST@@QT@	install -m 644 turqstat.dok $(DESTDIR)@datadir@/doc/xturqstat/sv/
@NOINST@@QT@	install -m 644 xturqstat.1  $(DESTDIR)@mandir@/man1/
@NOINST@@QT@	install -m 644 xturqstat-sv.1 $(DESTDIR)@mandir@/sv/man1/xturqstat.1
@NOINST@@QT@	install -d $(DESTDIR)@datadir@/turqstat/
@NOINST@@QT@	install -m 644 templates/default.tpl $(DESTDIR)@datadir@/turqstat/
@NOINST@@QT@	install -m 644 templates/svenska.tpl $(DESTDIR)@datadir@/turqstat/
@NOINST@@QT@	make -C po install

docs: doxygen.conf
	doxygen doxygen.conf

# Binary
turqstat@EXEEXT@: $(OBJS) $(SUBOBJS) $(DEF)
	@CXX@ $(CXXFLAGS) $(LDFLAGS) -o turqstat@EXEEXT@ $(OBJS) $(SUBOBJS) $(DEF) $(LIBS)

@QT@xturqstat@EXEEXT@: $(QTOBJS) $(SUBOBJS) $(DEF)
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) $(LDFLAGS) -o xturqstat@EXEEXT@ $(QTOBJS) $(SUBOBJS) $(DEF) $(LIBS) $(QTLIBS)

# Object files
turqstat.o: turqstat.cpp statengine.h statview.h arearead.h squishread.h fdapxread.h jamread.h mypointread.h tanstaaflread.h nntpread.h version.h config.h mytime.h output.h utility.h convert.h template.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/turqstat.cpp

statengine.o: statengine.cpp statengine.h config.h output.h utility.h convert.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/statengine.cpp

statview.o: statview.cpp statview.h statengine.h version.h config.h utility.h convert.h lexer.h template.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/statview.cpp

squishread.o: squishread.cpp squishread.h arearead.h statengine.h datatypes.h utility.h config.h output.h convert.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/squishread.cpp

utility.o: utility.cpp utility.h config.h mytime.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/utility.cpp

fdapxread.o: fdapxread.cpp fdapxread.h datatypes.h statengine.h arearead.h config.h output.h convert.h utility.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/fdapxread.cpp

tanstaaflread.o: tanstaaflread.cpp tanstaaflread.h datatypes.h statengine.h arearead.h config.h output.h convert.h utility.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/tanstaaflread.cpp

jamread.o: jamread.cpp jamread.h datatypes.h statengine.h arearead.h config.h output.h convert.h utility.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/jamread.cpp

mypointread.o: mypointread.cpp mypointread.h datatypes.h statengine.h arearead.h config.h output.h convert.h utility.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/mypointread.cpp

sdmread.o: sdmread.cpp sdmread.h arearead.h statengine.h datatypes.h utility.h config.h output.h convert.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/sdmread.cpp

newsspoolread.o: newsspoolread.cpp newsspoolread.h arearead.h utility.h config.h output.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/newsspoolread.cpp

lexer.o: lexer.cpp lexer.h config.h utility.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/lexer.cpp

template.o: template.cpp template.h lexer.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/template.cpp

@NONNTP@nntpread.o: nntpread.cpp nntpread.h statengine.h output.h
@NONNTP@	@CXX@ $(CXXFLAGS) -c $(srcdir)/nntpread.cpp

mytime.o: mytime.cpp mytime.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/mytime.cpp

output.o: output.cpp output.h config.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/output.cpp

mappings.o: mappings.cpp mappings.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/mappings.cpp

convert.o: convert.cpp convert.h mappings.h utility.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/convert.cpp

datatypes.o: datatypes.cpp datatypes.h config.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/datatypes.cpp

@QT@qtgui.o: qtgui.cpp qtgui.h qtlist.h qtreport.h statengine.h arearead.h squishread.h fdapxread.h jamread.h mypointread.h sdmread.h tanstaaflread.h newsspoolread.h utility.h qtbars.h mytime.h convert.h qtprogress.h config.h
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) -c $(srcdir)/qtgui.cpp

@QT@moc_qtgui.o: moc_qtgui.cpp
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) -c moc_qtgui.cpp

@QT@moc_qtgui.cpp: qtgui.h
@QT@	@QTMOC@ -o moc_qtgui.cpp qtgui.h

@QT@qtlist.o: qtlist.cpp qtlist.h statengine.h convert.h utility.h config.h
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) -c $(srcdir)/qtlist.cpp

@QT@moc_qtlist.cpp: qtlist.h
@QT@	@QTMOC@ -o moc_qtlist.cpp qtlist.h

@QT@moc_qtlist.o: moc_qtlist.cpp
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) -c moc_qtlist.cpp

@QT@qtreport.o: qtreport.cpp qtreport.h statview.h convert.h config.h
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) -c $(srcdir)/qtreport.cpp

@QT@moc_qtreport.cpp: qtreport.h
@QT@	@QTMOC@ -o moc_qtreport.cpp qtreport.h

@QT@moc_qtreport.o: moc_qtreport.cpp
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) -c moc_qtreport.cpp

@QT@qtbars.o: qtbars.cpp qtbars.h statengine.h convert.h utility.h qtbars.moc config.h
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) -c $(srcdir)/qtbars.cpp

@QT@moc_qtbars.cpp: qtbars.h
@QT@	@QTMOC@ -o moc_qtbars.cpp qtbars.h

@QT@moc_qtbars.o: moc_qtbars.cpp
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) -c moc_qtbars.cpp

@QT@qtbars.moc: qtbars.cpp
@QT@	@QTMOC@ -o qtbars.moc qtbars.cpp

@QT@qtprogress.o: qtprogress.cpp qtprogress.h
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) -c $(srcdir)/qtprogress.cpp

@QT@moc_qtprogress.cpp: qtprogress.h
@QT@	@QTMOC@ -o moc_qtprogress.cpp qtprogress.h

@QT@moc_qtprogress.o: moc_qtprogress.cpp
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) -c moc_qtprogress.cpp

@QT@outputqt.o: outputqt.cpp output.h qtprogress.h config.h
@QT@	@CXX@ $(CXXFLAGS) $(QTFLAGS) -c $(srcdir)/outputqt.cpp

# Utility program Teal
teal@EXEEXT@: $(TEALOBJS)
	@CXX@ $(CXXFLAGS) $(LDFLAGS) -o teal@EXEEXT@ $(TEALOBJS) $(LIBS)

teal.o: teal.cpp config.h utility.h convert.h
	@CXX@ $(CXXFLAGS) -c $(srcdir)/teal.cpp

# Other files
doxygen.conf: doxygen.conf.in config.status
	$(srcdir)/config.status

# List phony targets
.PHONY: all debian clean distclean debianclean install install-text \
        install-qt docs
